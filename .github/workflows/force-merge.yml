# This workflow lets maintainers replace the target branch history with a source branch using a forced push.
name: Force Merge Branch

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to push from (example: feature/awesome-update)'
        required: true
      target_branch:
        description: 'Branch to overwrite (example: main)'
        required: true 
      use_force_with_lease:
        description: 'Use --force-with-lease instead of --force for a safer overwrite'
        required: false
        default: 'true'

jobs:
  force-merge:
    name: Force push source onto target
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          fetch-depth: 0
          # Use a PAT stored in FORCE_MERGE_TOKEN to bypass branch protections when required.
          token: ${{ secrets.FORCE_MERGE_TOKEN }}
          persist-credentials: true

      - name: Configure git author
        run: |
          git config user.name "force-merge-bot"
          git config user.email "force-merge-bot@users.noreply.github.com"

      - name: Force merge source into target
        env:
          SOURCE_BRANCH: ${{ github.event.inputs.source_branch }}
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
          FORCE_WITH_LEASE: ${{ github.event.inputs.use_force_with_lease }}
        run: |
          set -euo pipefail

          if [ -z "$SOURCE_BRANCH" ] || [ -z "$TARGET_BRANCH" ]; then
            echo "Both source and target branches must be provided." >&2
            exit 1
          fi

          if [ "$SOURCE_BRANCH" = "$TARGET_BRANCH" ]; then
            echo "Source and target branches must be different to avoid accidental history loss." >&2
            exit 1
          fi

          git fetch origin "$SOURCE_BRANCH":"refs/remotes/origin/$SOURCE_BRANCH" --depth=0
          git checkout --detach "origin/$SOURCE_BRANCH"

          if [ "$FORCE_WITH_LEASE" = "true" ]; then
            PUSH_FLAG="--force-with-lease"
          else
            PUSH_FLAG="--force"
          fi

          git push origin HEAD:"$TARGET_BRANCH" "$PUSH_FLAG"

      - name: Verify final branch state
        env:
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
        run: |
          git fetch origin "$TARGET_BRANCH" --depth=1
          git rev-parse HEAD
          git rev-parse "origin/$TARGET_BRANCH"